name: Build and Deploy

on:
  push:
    branches:
      - test
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for multiple architectures
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ github.event.repository.name }}:latest
            ${{ github.event.repository.name }}:${{ github.sha }}


      - name: Save and gzip Docker image to file
        run: |
          docker save poc-discord-api:${{ github.sha }} | gzip > ${{ github.event.repository.name }}-${{ github.sha }}.tar.gz

      - name: Transfer Docker image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: ${{ github.event.repository.name }}-${{ github.sha }}.tar.gz
          target: /var/tmp/${{ github.event.repository.name }}-${{ github.sha }}.tar.gz

      - name: SSH into server and load Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker load < /var/tmp/${{ github.event.repository.name }}-${{ github.sha }}.tar.gz
            rm /var/tmp/${{ github.event.repository.name }}-${{ github.sha }}.tar.gz

      - name: SSH into server and restart Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /opt/poc-discord/
            docker compose --progress quiet up -d --no-deps --build backend